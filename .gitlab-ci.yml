include:
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v6.yml'

image: ubuntu:latest

variables:
  JULIA_CUDA_VERBOSE: 'true'
  NVIDIA_VISIBLE_DEVICES: 'all'
  NVIDIA_DRIVER_CAPABILITIES: 'compute,utility'


# Julia versions

julia:1.0:
  extends:
    - .julia:1.0
    - .test
  tags:
    - nvidia

julia:1.1:
  extends:
    - .julia:1.1
    - .test
  tags:
    - nvidia

# the "primary" target, where we require a new GPU to make sure all tests are run
julia:1.2:
  extends:
    - .julia:1.2
    - .test
  tags:
    - nvidia
    - sm_75

julia:1.3:
  extends:
    - .julia:1.3
    - .test
  tags:
    - nvidia

julia:nightly:
  extends:
    - .julia:nightly
    - .test
  allow_failure: true
  tags:
    - nvidia


# hardware platforms

platform:arm64:
  extends:
    - .julia:1.2
    - .test
  tags:
    - nvidia-arm64


# reverse tests

# NOTE: not using the Manifest (develop instead of instantiate) due to Pkg.jl#1423

cudanative:
  image: nvidia/cuda:latest
  extends: .julia:1.2
  tags:
    - nvidia
  script:
    - julia -e 'using Pkg;
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.build();'
    - julia -e 'using Pkg;
                Pkg.add(PackageSpec(name="CUDAnative", rev="master"));
                Pkg.test("CUDAnative");'
  allow_failure: true


# other tasks

precompile:
  extends: .julia:1.2
  variables:
    NVIDIA_VISIBLE_DEVICES: ''
    NVIDIA_DRIVER_CAPABILITIES: ''
  script:
    - julia --project -e 'using Pkg;
                          Pkg.instantiate();
                          Pkg.build();
                          Pkg.API.precompile()'
    - julia --project -e 'using CUDAdrv'

coverage:
  extends:
    - .julia:1.2
    - .coverage

documentation:
  extends:
    - .julia:1.2
    - .documentation
  tags:
    - nvidia

pages:
  stage: deploy
  script:
    - mv docs/build public
  artifacts:
    paths:
    - public
  only:
    - master
